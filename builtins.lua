local a=require"fourmi.task"local b=require"term.colors"local c=require"lfs"local d={}function d.sh(e,...)local f={...}for g,h in ipairs(f)do local i=tostring(h)f[g]=i:match"[^%s]%s+[^%s]"and string.format("%q",i)or i end;local j=e.." "..table.concat(f," ")local k=os.tmpname()print(b.magenta("🐢 "..j))local l,m,n=os.execute(j.." 2> "..k,"r")if l and m=="exit"and n==0 then return true else local o=io.open(k,"r")local p=o:read"*a"o:close()os.remove(k)return false,"Command `"..j.."` failed with status code, "..n..": "..p end end;function d.outdated(q,r)if q and r then local s=c.attributes(q)local t=c.attributes(r)return not t or s.change>t.change,r.." already present and up-to-date"elseif q then return not c.attributes(q),q.." already present"end end;function d.__(u,v)local w;repeat w=u:match"%${([A-Za-z_]+[A-Za-z_0-9]*)}"u=w and u:gsub("%${"..w.."}",os.getenv(w)or"")or u until not w;if not v then v={}local x=1;local y,z;repeat y,z=debug.getlocal(2,x)x=x+1;if y~=nil then v[y]=z end until not y end;local A;repeat A=u:match"#{([A-Za-z_]+[A-Za-z_0-9]*)}"u=A and u:gsub("#{"..A.."}",tostring(v[A]or _G[A]))or u until not A;return u end;d.task={}d.task.sh=function(j,...)local B={...}return a("$ "..j.." ",table.concat(B," ")):perform(function(C)local l,D=d.sh(j,table.unpack(B))if l then print(b.yellow(C.options.successMessage or j.." succeeded"))elseif not C.options.ignoreError then error(b.yellow(C.options.failureMessage or j.." failed: "..D))else print(b.yellow(C.options.failureMessage or j.." failed"))end;return l,D end)end;d.task.ls=a"ls":description"List files in a directory":perform(function(self)local E=d.__(self.options[1])local F={}for G in c.dir(E)do if not self.options[2]or G:match(self.options[2])then table.insert(F,E.."/"..G)end end;return table.unpack(F)end)d.task.mv=a"mv":description"Move a file":perform(function(self,H)local I=d.__(self.options[1]).."/"..H:match"([^/]*)$"local l,o=os.rename(H,I)if l then print(b.yellow("Moved `"..H.."` to `"..I.."`"))return I else error(o)end end)return d
