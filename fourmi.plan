-- Example fourmi.lua

local lfs    = require "lfs"
local fourmi = require "fourmi"
local plan   = fourmi.plan
local task   = fourmi.task
local sh     = fourmi.sh

-- Define tasks

local ls = task "ls"
    :description "List files in a directory"
    :perform(function(self, dir)
        local items = {}

        for item in lfs.dir(dir) do
            table.insert(items, dir .. "/" .. item)
        end

        return table.unpack(items)
    end)

local filter = task "filter"
    :description "Return input if matches pattern"
    :perform(function(self, item)
        return item:match(self.options.pattern or ".*") and item
    end)

local minify = task "minify"
    :description "Minify lua files with luamin"
    :perform(function(self, file)
        local minifiedFile =
            self.options.out .. "/" .. file:gsub("%.lua$", ".min.lua")

        local fd = io.open(minifiedFile, "w")

        if fd then
            fd:write(
                sh(
                    "luamin",
                    "-f", file
                )
            )

            fd:close()
        else
            error("Could not create minified file at: " .. minifiedFile)
        end

        return minifiedFile
    end)

local gzip = task "gzip"
    :description "Zip files"
    :perform(function(self, file)
        sh(
            "gzip",
            "-k",
            "-f",
            file
        )


        return file .. ".gzip"
    end)

-- Define plans

return {
    default = plan "default"
        :task(
            ls
            *
            (filter:opt {
                pattern = "%.lua$",
                quiet = true
            } ~ (minify:opt("out", os.getenv "HOME" .. "/tmp-code")
                    >> gzip))
        )
}
